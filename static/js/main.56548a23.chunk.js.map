{"version":3,"sources":["globalStyles.js","assets/hand.svg","components/atoms/Logo.jsx","components/atoms/Button.jsx","components/atoms/Svg.js","components/atoms/Typography.js","components/molecules/OverviewMenu.jsx","components/molecules/List.jsx","components/molecules/Step.jsx","components/molecules/Option.jsx","components/templates/Overview.jsx","components/pages/Start.jsx","assets/burger-menu.svg","assets/burger-close.svg","redux/actions.js","redux/actionCreators.js","components/organisms/Header.jsx","components/organisms/SideScore.jsx","components/organisms/GamePanel.jsx","components/organisms/PrizeList.jsx","components/pages/Game.jsx","components/pages/End.jsx","App.js","redux/mainReducer.js","redux/store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","LogoUI","styled","img","Logo","src","hand","alt","ButtonUI","button","Button","props","children","Svg","svg","pending","selected","correct","wrong","selectedPrize","disabled","OptionSvg","StepSvg","Title","h1","Question","h2","ScoreLabel","h4","AnswersTip","p","OverviewMenuUI","div","Summary","OverviewMenu","title","buttonLabel","redirectTo","score","useState","clicked","setClicked","onClick","to","process","ListUI","ul","menu","List","Step","formatPrize","currentPrize","toString","replace","width","height","viewBox","fill","xmlns","d","stroke","x","y","dominantBaseline","fontSize","textAnchor","Option","select","option","answer","OverviewWrapper","main","triangle","OverviewUI","Overview","Start","SET_PRIZE","TOGGLE_MENU","setPrize","payload","type","HeaderUI","header","ToggleButton","Header","isMenuOpened","useSelector","state","dispatch","useDispatch","burgerClose","burgerMenu","SideScoreUI","aside","SideScore","PrizeList","QuestionWrapper","GamePanel","answers","selectedAnswers","clickAnswer","question","gameOver","correctAnswersLength","rightAnswers","length","map","idx","Object","entries","key","answ","includes","toUpperCase","prize","sortedQuestions","questions","sort","a","b","GameWrapper","GameViewUI","Game","isLaptop","useMediaQuery","query","questionId","setQuestionId","setQuestion","setGameOver","setPending","setCorrect","setWrong","setSelectedAnswers","useEffect","find","q","id","setTimeout","every","answerKey","filter","End","App","path","exact","component","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56548a23.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --primary: #FF8B37;\n    --white: #fff;\n    --semi-orange: #FFF3EB;\n    --orange-light: #FFAC70;\n    --orange-dark: #E87928;\n    --green-solid: #47D867;\n    --green-light: #E6FAEA;\n    --red-solid: #EC6259;\n    --red-light: #FDEEED;\n    --bg-gray: #F5F5F7;\n    --border: #D0D0D8;\n    --text-black: #1C1C21;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Inter', sans-serif;\n  }\n\n  html {\n    font-size: 16px;\n  }\n\n  html,body, #root {\n    width: 100%;\n    height: 100%;\n  }\n\n  #root {\n    display: flex;\n  }\n\n  @media screen and (min-width: 1440px) {\n    html {\n      font-size: 20px;\n    }\n  }\n\n  @media screen and (min-width: 2560px) {\n    html {\n      font-size: 40px;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/hand.356cfb67.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport hand from \"../../assets/hand.svg\";\n\nconst LogoUI = styled.img`\n  width: 18rem;\n  height: 12rem;\n`;\n\nexport function Logo() {\n  return <LogoUI src={hand} alt='hand-logo' />;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonUI = styled.button`\n  width: 18.5rem;\n  height: 3rem;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  text-align: center;\n  font-size: 1rem;\n  color: var(--white);\n  background: var(--primary);\n\n  &:hover {\n    background: var(--orange-light);\n  }\n\n  &:active {\n    background: var(--orange-dark);\n  }\n`;\n\nexport function Button(props) {\n  return <ButtonUI {...props}>{props.children}</ButtonUI>;\n}\n","import styled from \"styled-components\";\n\nconst Svg = styled.svg`\n  margin: 0.5rem 0;\n  cursor: pointer;\n\n  &:hover {\n    path {\n      stroke: var(--primary);\n    }\n  }\n\n  @keyframes tick {\n    0% {\n      opacity: 1;\n    }\n    25% {\n      opacity: 0.75;\n    }\n    50% {\n      opacity: 0.5;\n    }\n    75% {\n      opacity: 0.5;\n    }\n    100% {\n      opacity: 0.25;\n    }\n  }\n  ${({ pending }) => pending && `animation: tick 1s ease-out infinite;`}\n\n  ${({ selected }) =>\n    selected && `path {stroke: var(--primary);fill: var(--semi-orange);}`}\n\n  ${({ correct }) =>\n    correct && `path {stroke: var(--green-solid); fill: var(--green-light);}`}\n\n  ${({ wrong }) =>\n    wrong && `path {stroke: var(--red-solid);fill: var(--red-light);}`}\n  \n  ${({ selectedPrize }) =>\n    selectedPrize &&\n    `path {stroke: var(--primary);}text {fill: var(--primary);}`}\n\n  ${({ disabled }) =>\n    disabled && `path {stroke: var(--border);}text {fill: var(--border);} `}\n`;\n\nexport const OptionSvg = styled(Svg)`\n  width: 20rem;\n  height: 3.5rem;\n`;\n\nexport const StepSvg = styled(Svg)`\n  width: 20rem;\n  height: 2rem;\n`;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  font-size: 2rem;\n\n  @media screen and (min-width: 1024px) {\n    font-size: 3.5rem;\n  }\n`;\n\nexport const Question = styled.h2`\n  font-size: 1.125rem;\n`;\n\nexport const ScoreLabel = styled.h4`\n  font-size: 1.25rem;\n  opacity: 0.5;\n`;\n\nexport const AnswersTip = styled.p`\n  font-size: 0.75rem;\n  opacity: 0.75;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, ScoreLabel, Title } from \"../atoms\";\nimport { Redirect } from \"react-router-dom\";\n\nconst OverviewMenuUI = styled.div`\n  display: flex;\n  max-width: 25rem;\n  height: 15rem;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  align-items: center;\n  text-align: center;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 35rem;\n    align-items: flex-start;\n    text-align: start;\n  }\n`;\n\nconst Summary = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport function OverviewMenu({ title, buttonLabel, redirectTo, score }) {\n  const [clicked, setClicked] = useState(false);\n\n  const handleClick = () => setClicked(!clicked);\n\n  return (\n    <>\n      <OverviewMenuUI>\n        <Summary>\n          {score && <ScoreLabel>Total score:</ScoreLabel>}\n          <Title>{title}</Title>\n        </Summary>\n        <Button onClick={handleClick}>{buttonLabel}</Button>\n      </OverviewMenuUI>\n\n      {clicked && <Redirect to={process.env.PUBLIC_URL + redirectTo} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ListUI = styled.ul`\n  display: flex;\n  max-width: 40rem;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-self: center;\n  list-style: none;\n\n  ${({ menu }) =>\n    menu &&\n    `\n    max-width: 20rem;\n    margin: auto 0;\n  `}\n`;\n\nexport function List(props) {\n  return (\n    <>\n      <ListUI {...props}>{props.children}</ListUI>\n    </>\n  );\n}\n","import React from \"react\";\nimport { StepSvg } from \"../atoms\";\n\nexport function Step(props) {\n  // to show commas\n  const formatPrize = props.currentPrize\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return (\n    <StepSvg\n      {...props}\n      width='320'\n      height='32'\n      viewBox='0 0 320 32'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path d='M41 16H0' stroke='#D0D0D8' />\n      <path d='M320 16H279' stroke='#D0D0D8' />\n      <path\n        d='M53.5303 3.70404C55.6719 1.64809 58.5256 0.5 61.4944 0.5H258.506C261.474 0.5 264.328 1.64809 266.47 3.70404L279.278 16L266.47 28.296C264.328 30.3519 261.474 31.5 258.506 31.5H61.4944C58.5256 31.5 55.6719 30.3519 53.5303 28.296L40.722 16L53.5303 3.70404Z'\n        fill='white'\n        stroke='#D0D0D8'\n      />\n      <text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        fontSize='14px'\n        textAnchor='middle'\n        fill='var(--text-black)'\n      >\n        ${formatPrize}\n      </text>\n    </StepSvg>\n  );\n}\n","import React from \"react\";\nimport { OptionSvg } from \"../atoms\";\n\nexport function Option(props) {\n  return (\n    <OptionSvg\n      {...props}\n      width='320'\n      height='56'\n      viewBox='0 0 320 56'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n      onClick={props.select}\n    >\n      <path d='M303 28L320 28' stroke='#D0D0D8' />\n      <path d='M0 28L17 28' stroke='#D0D0D8' />\n      <path\n        d='M32.8175 5.31576C34.9762 2.29361 38.4615 0.5 42.1754 0.5H277.825C281.539 0.5 285.024 2.29361 287.183 5.31576L303.386 28L287.183 50.6842C285.024 53.7064 281.539 55.5 277.825 55.5H42.1754C38.4615 55.5 34.9762 53.7064 32.8175 50.6842L16.6145 28L32.8175 5.31576Z'\n        fill='white'\n        stroke='#D0D0D8'\n      />\n      <text\n        x='15%'\n        y='50%'\n        dominantBaseline='middle'\n        fontSize='14px'\n        textAnchor='middle'\n        fill='var(--primary)'\n      >\n        {props.option}\n      </text>\n\n      <text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        fontSize='14px'\n        textAnchor='middle'\n        fill='var(--text-black)'\n      >\n        {props.answer}\n      </text>\n    </OptionSvg>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Logo } from \"../atoms/\";\nimport { OverviewMenu } from \"../molecules/\";\n\nconst OverviewWrapper = styled.main`\n  display: flex;\n  width: inherit;\n  height: inherit;\n  padding: 0 1rem;\n\n  ${({ triangle }) =>\n    triangle &&\n    `\n  background: linear-gradient(\n    to bottom right,\n    #fff 0%,\n    #fff 50%,\n    var(--semi-orange) 50%,\n    var(--semi-orange) 100%\n  );\n  `}\n`;\n\nconst OverviewUI = styled.div`\n  display: flex;\n  width: 100%;\n  margin: auto 0;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport function Overview(props) {\n  return (\n    <OverviewWrapper triangle={!!props.triangle}>\n      <OverviewUI>\n        <Logo />\n        <OverviewMenu {...props} />\n      </OverviewUI>\n    </OverviewWrapper>\n  );\n}\n","import React from \"react\";\nimport { Overview } from \"../templates\";\n\nexport function Start() {\n  return (\n    <Overview\n      triangle\n      title='Who wants to be a millionaire?'\n      buttonLabel='Start'\n      redirectTo='/game'\n    />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/burger-menu.4cc3cba4.svg\";","export default __webpack_public_path__ + \"static/media/burger-close.f1510c4e.svg\";","export const SET_PRIZE = \"SET_PRIZE\";\n\nexport const TOGGLE_MENU = \"TOGGLE_MENU\";\n","import { TOGGLE_MENU, SET_PRIZE } from \"./actions\";\n\nexport const toggleMenu = () => ({\n  type: TOGGLE_MENU,\n});\n\nexport const setPrize = (payload) => ({\n  type: SET_PRIZE,\n  payload,\n});\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport burgerMenu from \"../../assets/burger-menu.svg\";\nimport burgerClose from \"../../assets/burger-close.svg\";\nimport { toggleMenu } from \"../../redux/actionCreators\";\n\nconst HeaderUI = styled.header`\n  display: flex;\n  width: 100%;\n  height: 1rem;\n  flex-direction: row-reverse;\n`;\n\nconst ToggleButton = styled.button`\n  background: none;\n  outline: none;\n  border: none;\n`;\n\nexport function Header() {\n  const isMenuOpened = useSelector((state) => state.isMenuOpened);\n  const dispatch = useDispatch();\n\n  const handleClickMenu = () => dispatch(toggleMenu());\n\n  return (\n    <HeaderUI>\n      <ToggleButton onClick={handleClickMenu}>\n        {isMenuOpened ? (\n          <img src={burgerClose} alt='close' />\n        ) : (\n          <img src={burgerMenu} alt='menu' />\n        )}\n      </ToggleButton>\n    </HeaderUI>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { PrizeList } from \"../organisms\";\n\nconst SideScoreUI = styled.aside`\n  display: flex;\n  width: 20rem;\n  height: 100%;\n  align-items: center;\n  background: var(--white);\n`;\n\nexport function SideScore() {\n  return (\n    <SideScoreUI>\n      <PrizeList />\n    </SideScoreUI>\n  );\n}\n","import React from \"react\";\nimport { AnswersTip, Question } from \"../atoms\";\nimport { List, Option } from \"../molecules\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  min-height: 6rem;\n  flex-direction: column;\n  justify-content: space-between;\n\n  text-align: center;\n\n  @media screen and (min-width: 425px) {\n    max-width: 30rem;\n    text-align: start;\n  }\n`;\n\nexport function GamePanel({\n  correct,\n  pending,\n  wrong,\n  selectedAnswers,\n  clickAnswer,\n  question,\n  gameOver,\n}) {\n  const showQuestion = (answers) =>\n    answers.map((answer, idx) => {\n      // destructure entries of answer to get key of answer and actual answer\n      const [key, answ] = Object.entries(answer)[0];\n      return (\n        <Option\n          selected={selectedAnswers.includes(key)}\n          correct={correct && selectedAnswers.includes(key)}\n          pending={pending && selectedAnswers.includes(key)}\n          wrong={wrong && selectedAnswers.includes(key)}\n          key={idx}\n          option={key.toUpperCase()}\n          answer={answ}\n          select={() => clickAnswer(key)}\n        />\n      );\n    });\n\n  // To show count of possible answers\n  const correctAnswersLength = question?.rightAnswers.length;\n\n  return (\n    <>\n      {question && (\n        <>\n          <QuestionWrapper>\n            <Question>{question.question}</Question>\n            {correctAnswersLength > 1 && (\n              <AnswersTip>Possible answers: {correctAnswersLength}</AnswersTip>\n            )}\n          </QuestionWrapper>\n          <List>{showQuestion(question.answers)}</List>\n        </>\n      )}\n\n      {gameOver && <Redirect to={process.env.PUBLIC_URL + \"/results\"} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Step, List } from \"../molecules\";\nimport questions from \"../../questions.json\";\n\nexport function PrizeList(props) {\n  const prize = useSelector((state) => state.prize);\n  const sortedQuestions = questions.sort((a, b) => b.prize - a.prize);\n\n  return (\n    <List menu={props.menu}>\n      {sortedQuestions &&\n        sortedQuestions.map((question) => (\n          <Step\n            key={question.prize}\n            currentPrize={question.prize}\n            selectedPrize={prize === question.prize}\n            disabled={prize > question.prize}\n          />\n        ))}\n    </List>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Header, SideScore, GamePanel, PrizeList } from \"../organisms\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { setPrize } from \"../../redux/actionCreators\";\nimport questions from \"../../questions.json\";\n\nconst GameWrapper = styled.main`\n  display: flex;\n  width: inherit;\n  height: inherit;\n  flex-direction: column;\n  padding: 1rem;\n  background: var(--bg-gray);\n`;\n\nconst GameViewUI = styled.div`\n  display: flex;\n  width: inherit;\n  height: inherit;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  text-align: center;\n`;\n\nexport function Game() {\n  const isMenuOpened = useSelector((state) => state.isMenuOpened);\n  const isLaptop = useMediaQuery({\n    query: \"(min-width: 1024px)\",\n  });\n  const [questionId, setQuestionId] = useState(1);\n  const [question, setQuestion] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [pending, setPending] = useState(false);\n  const [correct, setCorrect] = useState(false);\n  const [wrong, setWrong] = useState(false);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Go to next question\n    questions && setQuestion(questions.find((q) => q.id === questionId));\n\n    // If there's no more questions available - go to results\n    if (questionId > questions.length) {\n      setGameOver(true);\n    }\n  }, [questionId]);\n\n  useEffect(() => {\n    // Check if selected answers match quantity of right answers\n    if (question && selectedAnswers.length === question.rightAnswers.length) {\n      setPending(true);\n\n      // Timeout to imitate pending\n      setTimeout(() => {\n        setPending(false);\n        // Check if selected answers match right answers\n        // If they do match - go to next question, otherwise game is over\n        if (selectedAnswers.every((x) => question.rightAnswers.includes(x))) {\n          setCorrect(true);\n\n          setTimeout(() => {\n            setCorrect(false);\n            setQuestionId(questionId + 1);\n            setSelectedAnswers([]);\n            dispatch(setPrize(question.prize));\n          }, 1000);\n        } else {\n          setWrong(true);\n\n          setTimeout(() => {\n            setGameOver(true);\n            setSelectedAnswers([]);\n          }, 1000);\n        }\n      }, 2000);\n    }\n  }, [selectedAnswers]);\n\n  const clickAnswer = (answerKey) => {\n    // To toggle between selected/deselected\n    if (selectedAnswers.includes(answerKey)) {\n      setSelectedAnswers(selectedAnswers.filter((answ) => answ !== answerKey));\n    } else {\n      setSelectedAnswers([...selectedAnswers, answerKey]);\n    }\n  };\n\n  return (\n    <>\n      <GameWrapper>\n        {!isLaptop && <Header />}\n        {isMenuOpened ? (\n          <PrizeList menu questions={questions} />\n        ) : (\n          <GameViewUI>\n            <GamePanel\n              correct={correct}\n              pending={pending}\n              wrong={wrong}\n              selectedAnswers={selectedAnswers}\n              clickAnswer={clickAnswer}\n              question={question}\n              gameOver={gameOver}\n            />\n          </GameViewUI>\n        )}\n      </GameWrapper>\n      {isLaptop && <SideScore />}\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPrize } from \"../../redux/actionCreators\";\nimport { Overview } from \"../templates\";\n\nexport function End() {\n  const prize = useSelector((state) => state.prize);\n  const formatPrize = prize.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(setPrize(0));\n    };\n  }, []);\n\n  return (\n    <Overview\n      score\n      title={`$${formatPrize} earned`}\n      buttonLabel='Try again'\n      redirectTo='/'\n    />\n  );\n}\n","import { GlobalStyle } from \"./globalStyles\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { End, Game, Start } from \"./components/pages\";\n\nexport function App() {\n  const path = process.env.PUBLIC_URL;\n  return (\n    <Router>\n      <GlobalStyle />\n\n      <Switch>\n        <Route exact path={path + \"/\"} component={Start} />\n        <Route exact path={path + \"/game\"} component={Game} />\n        <Route exact path={path + \"/results\"} component={End} />\n      </Switch>\n    </Router>\n  );\n}\n","import { TOGGLE_MENU, SET_PRIZE } from \"./actions\";\n\nconst initialState = {\n  prize: 0,\n  isMenuOpened: false,\n};\n\nexport const mainReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TOGGLE_MENU:\n      return { ...state, isMenuOpened: !state.isMenuOpened };\n    case SET_PRIZE:\n      return { ...state, prize: payload };\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport { mainReducer } from \"./mainReducer\";\n\nexport const store = createStore(mainReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}